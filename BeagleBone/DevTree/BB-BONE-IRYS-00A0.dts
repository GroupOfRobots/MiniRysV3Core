/*
 * Copyright (C) 2013 Intelligent Agent AS	<elias@iagent.no>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */


/dts-v1/;
/plugin/;

/ {
    compatible = "ti,beaglebone", "ti,beaglebone-black";

    /* identification */
    part-number = "BB-BONE-IRYS";
    version = "00A0";

    /* state the resources this cape uses */
    exclusive-use =
        /* the pin header P8 uses */
	"P8.39", /* Motor Left Direction*/
	"pr1_pru1_pru_r30_6",
	"P8.40", /* Motor Left Step	*/
	"pr1_pru_pru1_r30_7",
	"P8.41", /* Motor Left M0	*/
	"pr1_pru1_pru_r30_4",
	"P8.42", /* Motor Left M1	*/
	"pr1_pru1_pru_r30_5",
	"P8.43", /* Motor Right Direction*/
	"pr1_pru1_pru_r30_2",
	"P8.44", /* Motor Right Step	*/
	"pr1_pru1_pru_r30_3",
	"P8.45", /* Motor Right M0	*/
	"pr1_pru1_pru_r30_0",
	"P8.46", /* Motor Right M1	*/
	"pr1_pru1_pru_r30_1",
	"P8.27", /* Sonar Trigger 	*/
	"pr1_pru1_pru_r30_8",
	"P8.28", /* Sonar 1 Echo	*/
	"pr1_pru1_pru_r31_10",
	"P8.29", /* Sonar 2 Echo	*/
	"pr1_pru1_pru_r31_9",
	"P8.30", /* Sonar 3 Echo	*/
	"pr1_pru1_pru_r31_11",

        /* the pin header P9 uses */
	"P9.14", /* Motor Right Enable 	*/
	"P9.15", /* Motor Left Enable	*/
        "P9.28", /* SPI1_CS0 	*/
        "P9.29", /* SPI1_MISO   */
        "P9.30", /* SPI1_MOSI	*/
        "P9.31", /* SPI1_SCLK	*/
        "P9.33", /* AIN4        */
        "P9.35", /* AIN6        */
        "P9.36", /* AIN5        */
        "P9.42"; /* SPI1_CS1	*/

    fragment@0 {
        target = <&am33xx_pinmux>;
        __overlay__ {
            bone_spi1_pins: pinmux_spi1_pins {
                pinctrl-single,pins = <
                    0x190 0x13	/* P9_31 = mcasp0_aclkx.spi1_sclk				 , OUTPUT_PULLUP | MODE3 */
                    0x194 0x33	/* P9_29 = mcasp0_fsx.spi1_d0					 , INPUT_PULLUP  | MODE3 */
                    0x198 0x13	/* P9_30 = mcasp0_axr0.spi1_d1					 , OUTPUT_PULLUP | MODE3 */
                    0x19c 0x13	/* P9_28 = mcasp0_ahclkr.spi1_cs0				 , OUTPUT_PULLUP | MODE3 */					
                    0x164 0x12  /* P9_42 = GPIO0_7 =  eCAP0_in_PWM0_out.gpio0[7] , OUTPUT_PULLUP | MODE2 */
                >;
            };					
            pruicss_irys_pins: pinmux_pruicss_irys_pins{
                pinctrl-single,pins = <
			0x0b8 0xd // P8_39 = Motor Left Direction 	= 6	
		    	0x0bc 0xd // P8_40 = Motor Left Step	 	= 7
			0x0b0 0xd // P8_41 = Motor Left M0	 	= 4
		    	0x0b4 0xd // P8_42 = Motor Left M1	 	= 5
			0x0a8 0xd // P8_43 = Motor Right Direction  	= 2
			0x0ac 0xd // P8_44 = Motor Right Step	 	= 3
			0x0a0 0xd // P8_45 = Motor Right M0  		= 0
			0x0a4 0xd // P8_46 = Motor Right M1	  	= 1
			0x0e0 0xd // P8_27 = Sonar Trigger	 	= 8
			0x0e8 0x26 // P8_28 = Sonar 1 Echo	  	= 10
			0x0e4 0x26 // P8_29 = Sonar 2 Echo	 	= 9
			0x0ec 0x26 // P8_30 = Sonar 3 Echo	  	= 11
                >;
            };	

            gpio_irys_pins: pinmux_gpio_irys_pins{
                pinctrl-single,pins = <
			0x048 0x07 // P9_14 = Motor Right Enable  	= GPIO0_50
			0x040 0x07 // P9_15 = Motor Left Enable 	= GPIO1_48
                >;
            };
        };
    };

    fragment@1 {
        target = <&spi1>;
        __overlay__ {
            #address-cells 	= <1>;
            #size-cells 	= <0>;
            status			= "okay";
            pinctrl-names	= "default";
            pinctrl-0		= <&bone_spi1_pins>;	
            cs-gpios 		= <&gpio3 17 0>, <&gpio0 7 0>;

            stepper_control{
                #address-cells 	  = <1>;
                #size-cells 	  = <0>;
                compatible 		  = "spidev";
                reg 			  = <0>;
                spi-max-frequency = <16000000>;
                spi-cpha;		  // Stepper control has mode 1 (CPOL = 0, CPHA = 1)
            };

            stepper_current{
                #address-cells 	  = <1>;
                #size-cells 	  = <0>;
                compatible 		  = "spidev";
                reg 			  = <1>;
                spi-max-frequency = <16000000>;
                   				  // Stepper current has mode 0 (CPOL = 0, CPHA = 0)
            };
        };
    };

    fragment@2{
        target = <&pruss>;
        __overlay__{
            status = "okay";
            pinctrl-names = "default";
            pinctrl-0 	  = <&pruicss_irys_pins>;
        };
    };


    fragment@3 {
        target = <&tscadc>;
        __overlay__ {			
            status = "okay";
            adc {
                ti,adc-channels = <4 5 6 7>;
            };
        };
    };
};
