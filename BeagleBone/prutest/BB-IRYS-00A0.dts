/*
 * Copyright (C) 2013 Kamil Foryszewski 
 *
 * Cape for IRYS robot 
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

/dts-v1/;
/plugin/;

/ {
	compatible = "ti,beaglebone", "ti,beaglebone-black";

	/* identification */
	part-number = "BB-IRYS";
	version = "00A0";

	/* state the resources this cape uses */
	exclusive-use =
		/* the pin header uses */
		"P9.19",	/* i2c2_sda 		*/
		"P9.20",	/* i2c2_scl 		*/
		"P9.14", 	/* Motor Right Enable 	*/
		"P9.15", 	/* Motor Left Enable	*/
		"P9.28", 	/* SPI1_CS0 		*/
		"P9.29", 	/* SPI1_MISO   		*/
		"P9.30", 	/* SPI1_MOSI		*/
		"P9.31", 	/* SPI1_SCLK		*/
		"P9.36", 	/* AIN5        		*/
		"P9.38", 	/* AIN3        		*/
		"P9.40", 	/* AIN1        		*/
		"P8.39", 	/* Motor Left Direction	*/
		"P8.40", 	/* Motor Left Step	*/
		"P8.41", 	/* Motor Left M0	*/
		"P8.42", 	/* Motor Left M1	*/
		"P8.43", 	/* Motor Right Direction*/
		"P8.44", 	/* Motor Right Step	*/
		"P8.45", 	/* Motor Right M0	*/
		"P8.46", 	/* Motor Right M1	*/

		"P8.27", 	/* Sonar Trigger 	*/
		"P8.28", 	/* Sonar 1 Echo		*/
		"P8.29", 	/* Sonar 2 Echo		*/
		"P8.30", 	/* Sonar 3 Echo		*/


	fragment@0 {
		target = <&am33xx_pinmux>;
		__overlay__ {
			bb_i2c2_pins: pinmux_bb_i2c2_pins {
				pinctrl-single,pins = <
					0x178 0x73	/* i2c2_sda, SLEWCTRL_SLOW | INPUT_PULLUP | MODE3 */
					0x17c 0x73	/* i2c2_scl, SLEWCTRL_SLOW | INPUT_PULLUP | MODE3 */
				>;
			};

			bone_spi1_pins: pinmux_spi1_pins {
               			 pinctrl-single,pins = <
                    			0x190 0x13	/* P9_31 = mcasp0_aclkx.spi1_sclk				, OUTPUT_PULLUP | MODE3 */
                			0x194 0x33	/* P9_29 = mcasp0_fsx.spi1_d0					, INPUT_PULLUP  | MODE3 */
                    			0x198 0x13	/* P9_30 = mcasp0_axr0.spi1_d1					, OUTPUT_PULLUP | MODE3 */
                    			0x19c 0x13	/* P9_28 = mcasp0_ahclkr.spi1_cs0				, OUTPUT_PULLUP | MODE3 */					
                    			0x164 0x12  	/* P9_42 = GPIO0_7 =  eCAP0_in_PWM0_out.gpio0[7] 		, OUTPUT_PULLUP | MODE2 */
                		>;
            		};				

			gpio_pins: pinmux_gpio_pins{
				pinctrl-single,pins = <

					0x048 0x07 // P9_14 = Motor Right Enable  	= GPIO0_50
					0x040 0x07 // P9_15 = Motor Left Enable 	= GPIO1_48


				>;
			};

			pruicss_pins: pinmux_pruicss_pins{
				pinctrl-single,pins = <

				    	0x0B8 0x05 // P9_39 = Motor Left Direction 	= 6	
				    	0x0BC 0x05 // P9_40 = Motor Left Step	 	= 7
					0x0B0 0x05 // P9_41 = Motor Left M0	 	= 4
				    	0x0B4 0x05 // P9_42 = Motor Left M1	 	= 5
					0x0A8 0x05 // P9_43 = Motor Right Direction  	= 2
					0x0AC 0x05 // P9_44 = Motor Right Step	 	= 3
					0x0A0 0x05 // P9_45 = Motor Right M0  		= 0
					0x0A4 0x05 // P9_46 = Motor Right M1	  	= 1
					0x0E0 0x05 // P9_27 = Sonar Trigger	 	= 8
					0x0E8 0x26 // P9_28 = Sonar 1 Echo	  	= 10
					0x0E4 0x26 // P9_29 = Sonar 2 Echo	 	= 9
					0x0EC 0x26 // P9_30 = Sonar 3 Echo	  	= 11


				>;
			};
		};
	};

	fragment@1 {
		target = <&i2c2>;
		__overlay__ {
			status = "okay";
			pinctrl-names = "default";
			pinctrl-0 = <&bb_i2c2_pins>;

			/* this is the configuration part */
			clock-frequency = <100000>;

			#address-cells = <1>;
			#size-cells = <0>;

			/* add any i2c devices on the bus here */

		};
	};

	fragment@2 {
		target = <&spi1>;
		__overlay__ {
		    #address-cells 	= <1>;
		    #size-cells 	= <0>;
		    status			= "okay";
		    pinctrl-names	= "default";
		    pinctrl-0		= <&bone_spi1_pins>;	
		    cs-gpios 		= <&gpio3 17 0>, <&gpio0 7 0>;

		    control{
		        #address-cells 	  = <1>;
		        #size-cells 	  = <0>;
		        compatible 		  = "spidev";
		        reg 			  = <0>;
		        spi-max-frequency = <16000000>;
		        spi-cpha;		  //control has mode 1 (CPOL = 0, CPHA = 1)
		    };

		    current{
		        #address-cells 	  = <1>;
		        #size-cells 	  = <0>;
		        compatible 		  = "spidev";
		        reg 			  = <1>;
		        spi-max-frequency = <16000000>;
		           				  //current has mode 0 (CPOL = 0, CPHA = 0)
		    };
		};
	};

	fragment@3{  
    		target = <&pruss>;  
    		__overlay__ {  
      			status = "okay";  
      			pinctrl-names = "default";  
      			pinctrl-0 = <&pruicss_pins>;  
    		};  
   	};

	fragment@4 {
		target = <&tscadc>;
		__overlay__ {			
		    status = "okay";
		    	adc {
		        	ti,adc-channels = <1 3 5>;
		    	};
		};
	};
};
